stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

.setup_ssh: &setup_ssh |
  mkdir -p ~/.ssh
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  chmod 600 ~/.ssh/id_rsa
  echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

test:
  stage: test
  image: python:3.10
  services:
    - name: postgres:15-alpine
      alias: postgres
      variables:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: aspirine13z
        POSTGRES_DB: alexis_test
  variables:
    POSTGRES_HOST: postgres
    OLLAMA_HOST: localhost
    TESTING: "True"
  before_script:
    - pip install -r requirements.txt
    - pip install pytest pytest-asyncio httpx
  script:
    - pytest -xvs tests/ --junitxml=report.xml
  artifacts:
    reports:
      junit: report.xml
    expire_in: 1 week
  only:
    - main
    - merge_requests

lint:
  stage: test
  image: python:3.10
  before_script:
    - pip install flake8
  script:
    - flake8 app/ --max-line-length=120 --exclude=__pycache__,__init__.py --ignore=E501,W503
  only:
    - main
    - merge_requests

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest
      fi
  only:
    - main
    - tags

deploy_staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - *setup_ssh
  script:
    - ssh $TEST_SERVER_USER@$TEST_SERVER "mkdir -p ~/nicomate"
    - scp docker-compose.yml .env $TEST_SERVER_USER@$TEST_SERVER:/home/$TEST_SERVER_USER/nicomate/
    - |
      ssh $TEST_SERVER_USER@$TEST_SERVER "cd ~/nicomate && \
      echo 'IMAGE_TAG=$IMAGE_TAG' >> .env && \
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && \
      docker-compose pull && \
      docker-compose up -d"
  environment:
    name: staging
    url: http://$TEST_SERVER:8000
  only:
    - main

deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - *setup_ssh
  script:
    - ssh $PROD_SERVER_USER@$PROD_SERVER "mkdir -p ~/nicomate"
    - scp docker-compose.yml .env $PROD_SERVER_USER@$PROD_SERVER:/home/$PROD_SERVER_USER/nicomate/
    - |
      ssh $PROD_SERVER_USER@$PROD_SERVER "cd ~/nicomate && \
      echo 'IMAGE_TAG=$IMAGE_TAG' >> .env && \
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && \
      docker-compose pull && \
      docker-compose up -d"
  environment:
    name: production
    url: http://$PROD_SERVER:8000
  rules:
    - if: $CI_COMMIT_TAG